module AquaDHT declares *

data ClearExpiredResult:
  success: bool
  error: string
  count_keys: u64
  count_values: u64

data DhtResult:
  success: bool
  error: string

data Key:
  key: string
  peer_id: string
  timestamp_created: u64
  signature: []u8
  pinned: bool
  weight: u32

data Record:
  value: string
  peer_id: string
  set_by: string
  relay_id: []string
  service_id: []string
  timestamp_created: u64
  signature: []u8
  weight: u32

data EvictStaleItem:
  key: Key
  records: []Record

data EvictStaleResult:
  success: bool
  error: string
  results: []EvictStaleItem

data GetKeyMetadataResult:
  success: bool
  error: string
  key: Key

data GetValuesResult:
  success: bool
  error: string
  result: []Record

data MergeResult:
  success: bool
  error: string
  result: []Record

data PutHostValueResult:
  success: bool
  error: string
  key: string
  value: []Record

data RepublishValuesResult:
  success: bool
  error: string
  updated: u64

data WeightResult:
  success: bool
  weight: u32
  peer_id: string
  error: string

service AquaDHT("aqua-dht"):
  clear_expired(current_timestamp_sec: u64) -> ClearExpiredResult
  clear_host_value(key: string, current_timestamp_sec: u64) -> DhtResult
  evict_stale(current_timestamp_sec: u64) -> EvictStaleResult
  get_host_value_bytes(value: string, relay_id: []string, service_id: []string, timestamp_created: u64) -> []u8
  get_key_bytes(key: string, timestamp_created: u64) -> []u8
  get_key_metadata(key: string, current_timestamp_sec: u64) -> GetKeyMetadataResult
  get_value_bytes(value: string, relay_id: []string, service_id: []string, timestamp_created: u64) -> []u8
  get_values(key: string, current_timestamp_sec: u64) -> GetValuesResult
  merge(records: [][]Record) -> MergeResult
  merge_two(a: []Record, b: []Record) -> MergeResult
  propagate_host_value(set_host_value: PutHostValueResult, current_timestamp_sec: u64, weight: WeightResult) -> DhtResult
  put_host_value(key: string, value: string, timestamp_created: u64, relay_id: []string, service_id: []string, signature: []u8, weight: WeightResult, current_timestamp_sec: u64) -> PutHostValueResult
  put_value(key: string, value: string, relay_id: []string, service_id: []string, timestamp_created: u64, signature: []u8, weight: WeightResult, current_timestamp_sec: u64) -> DhtResult
  register_key(key: string, timestamp_created: u64, signature: []u8, pin: bool, weight: WeightResult, current_timestamp_sec: u64) -> DhtResult
  republish_key(key: Key, current_timestamp_sec: u64) -> DhtResult
  republish_values(key: string, records: []Record, current_timestamp_sec: u64) -> RepublishValuesResult
  set_expired_timeout(timeout_sec: u64)  
  set_host_expired_timeout(timeout_sec: u64)  
  set_stale_timeout(timeout_sec: u64)  
