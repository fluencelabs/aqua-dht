name: Run tests with workflow_call

on:
  workflow_call:
    inputs:
      fluence-env:
        description: "Fluence enviroment to run tests agains"
        type: string
        default: "local"
      rust-peer-image:
        description: "rust-peer image tag"
        type: string
        default: "fluencelabs/fluence:minimal"
      aqua-version:
        description: "@fluencejs/aqua version"
        type: string
        default: "null"
      ref:
        description: "GitHub ref to checkout to"
        type: string
        default: "main"

env:
  FORCE_COLOR: true
  RUST_PEER_IMAGE: "${{ inputs.rust-peer-image }}"
  FLUENCE_ENV: "${{ inputs.fluence-env }}"

jobs:
  aqua:
    name: "Run aqua tests"
    runs-on: builder

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Import secrets
        uses: hashicorp/vault-action@v2.4.3
        with:
          url: https://vault.fluence.dev
          path: jwt/github
          role: ci
          method: jwt
          jwtGithubAudience: "https://github.com/fluencelabs"
          jwtTtl: 300
          secrets: |
            kv/docker-registry/basicauth/ci username | DOCKER_USERNAME ;
            kv/docker-registry/basicauth/ci password | DOCKER_PASSWORD ;
            kv/npm-registry/basicauth/ci token | NODE_AUTH_TOKEN;

      - name: Checkout registry
        uses: actions/checkout@v3
        with:
          repository: fluencelabs/registry
          ref: ${{ inputs.ref }}

      - name: Setup node with self-hosted registry
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          registry-url: "https://npm.fluence.dev"
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

      - name: Run npm install in aqua
        run: npm install
        working-directory: aqua

      - name: Set aqua version
        if: inputs.aqua-version != 'null'
        uses: fluencelabs/github-actions/npm-set-dependency@main
        with:
          package: "@fluencelabs/aqua"
          version: ${{ inputs.aqua-version }}
          working-directory: aqua
          flags: "--save-dev"

      - name: Run npm install in aqua-tests
        run: npm install
        working-directory: aqua-tests

      - name: Set aqua version
        if: inputs.aqua-version != 'null'
        uses: fluencelabs/github-actions/npm-set-dependency@main
        with:
          package: "@fluencelabs/aqua"
          version: ${{ inputs.aqua-version }}
          working-directory: aqua-tests
          flags: "--save-dev"

      - name: Setup Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Install Marine
        uses: baptiste0928/cargo-install@v1.3.0
        with:
          crate: marine

      - name: Build service
        run: ./build.sh
        working-directory: service

      - name: Create builtin distribution package
        run: ./builtin-package/package.sh

      - name: Unpack registry package
        run: tar xvf registry.tar.gz

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.fluence.dev
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Pull rust-peer image
        run: docker pull $RUST_PEER_IMAGE

      - name: Run rust-peer
        uses: isbang/compose-action@v1.4.1
        with:
          compose-file: ".github/e2e/docker-compose.yml"
          down-flags: "--volumes"

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: "pip"
          cache-dependency-path: aqua-tests/requirements.txt

      - name: Install python requirements
        run: pip install -r requirements.txt
        working-directory: aqua-tests

      - name: Wair for registry to be deployed
        uses: Wandalen/wretry.action@v1.0.36
        env:
          PEER_ADDR: /ip4/127.0.0.1/tcp/9991/ws/p2p/12D3KooWBM3SdXWqGaawQDGQ6JprtwswEg3FWGvGhmgmMez1vRbR
        with:
          command: |
            npx aqua remote get_interface --addr ${PEER_ADDR} --id registry \
            | jq -c 'has("function_signatures")'
          attempt_limit: 5
          attempt_delay: 10000
          current-path: ${{ github.workspace}}/aqua-tests

      - name: Print aqua version
        run: pytest -s test_aqua_version.py
        working-directory: aqua-tests

      - name: Run aqua tests
        run: pytest -n auto test_aqua.py
        working-directory: aqua-tests

      - name: Setup dasel
        if: always()
        uses: allejo/setup-dasel@v1
        with:
          version: 1.27.3

      - name: Print versions to check summary
        if: always()
        working-directory: aqua-tests
        run: |
          cat <<SNAPSHOT >> $GITHUB_STEP_SUMMARY
          ## Used versions
          | name       | version                                                              |
          | ---------- | -------------------------------------------------------------------- |
          | rust-peer  | $(docker run --rm --entrypoint=fluence ${RUST_PEER_IMAGE} --version) |
          | avm        | $(dasel -f package-lock.json -p json -m --plain 'packages.(?:-=node_modules/@fluencelabs/avm).version') |
          | marine-js  | $(dasel -f package-lock.json -p json -m --plain 'packages.(?:-=node_modules/@fluencelabs/marine-js).version') |
          | aqua       | $(npx aqua --version)                                                |
          | fluence-js | $(dasel -f package-lock.json -p json -m --plain 'packages.(?:-=node_modules/@fluencelabs/fluence).version') |
          SNAPSHOT

      - name: Dump rust-peer logs on failure
        if: always()
        uses: jwalton/gh-docker-logs@v2

      - name: Remove registry directory
        if: always()
        run: sudo rm -rf registry
